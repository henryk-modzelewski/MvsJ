        - export debug_ex
        - 
        - """
        - Use debug_ex(x::AbstractArray)
        - This simple function sums each element in 'x'\n
        - 
        - Julia Debugging Example - debug_ex\n
        - West Grid Research Computing Summer School - UBC - June 2017
        - 
        - ================================================================================\n
        -  Author:   Keegan Lensink\n
        -             Seismic Laboratory for Imaging and Modeling\n
        -             UBC, Vancouver\n
        -             June, 2017\n
        - ================================================================================\n
        - """
        - function debug_ex{T<:Number}(x::AbstractArray{T})
        - 
        -     # If x is multidimensional, vectorize it by reference
        -     (ndims(x) > 1) && (x = vec(x))
        - 
        -     # Get the length of x for iteration
    25024     n = length(x)
        - 
        -     # Initialize output
        0     b = 0
        - 
        -     # Loop over values in x
        0     for i = 1:n
        -         
 79991824         b += x[i]
        - 
        -     end # for
        - 
        0     return b
        -     
        - end # debug_ex
        - 
        - function debug_ex{T<:String}(x::AbstractArray{T})
        - 
        -     # If x is multidimensional, vectorize it by reference
        -     (ndims(x) > 1) && (x = vec(x))
        - 
        -     # Join the string array's elements into one string    
        -     b = join(x, " + ")
        -     
        -     all(map(isnumber,x)) && (b = eval(parse(b)))
        -     
        -     return b
        -     
        - end # debug_ex
        - 
        - 
